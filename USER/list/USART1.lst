C51 COMPILER V9.00   USART1                                                                06/15/2016 16:36:38 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART1
OBJECT MODULE PLACED IN ..\list\USART1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\CH\USART1.C LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\list\USART1.lst) OBJ
                    -ECT(..\list\USART1.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          
  15          #include "USART1.h"
  16          
  17          
  18          COMx_Define     COM1;
  19          bit             B_TI;
  20          u8      idata TX1_Buffer[COM_TX1_Lenth];        //发送缓冲
  21          u8      idata RX1_Buffer[COM_RX1_Lenth];        //接收缓冲
  22          U8  RxState;
  23          U8  xdata RxBuffer[50];
  24          void    UART1_TxByte(unsigned char dat)
  25          {
  26   1              B_TI = 0;
  27   1              SBUF = dat;
  28   1              while(!B_TI);
  29   1              B_TI = 0;
  30   1      }
  31          u8 USART_Configuration(u8 UARTx, COMx_InitDefine *COMx)
  32          {
  33   1              u8      i;
  34   1              u32     j;
  35   1              
  36   1              if(UARTx == USART1)
  37   1              {
  38   2                      COM1.id = 1;
  39   2                      COM1.TX_read    = 0;
  40   2                      COM1.TX_write   = 0;
  41   2                      COM1.B_TX_busy  = 0;
  42   2                      COM1.RX_Cnt     = 0;
  43   2                      COM1.RX_TimeOut = 0;
  44   2                      COM1.B_RX_OK    = 0;
  45   2                      for(i=0; i<COM_TX1_Lenth; i++)  TX1_Buffer[i] = 0;
  46   2                      for(i=0; i<COM_RX1_Lenth; i++)  RX1_Buffer[i] = 0;
  47   2      
  48   2                      if(COMx->UART_Mode > UART_9bit_BRTx)    return 1;       //模式错误
  49   2                      if(COMx->UART_Polity == PolityHigh)             PS = 1; //高优先级中断
  50   2                      else                                                                    PS = 0; //低优先级中断
  51   2                      SCON = (SCON & 0x3f) | COMx->UART_Mode;
  52   2                      if((COMx->UART_Mode == UART_9bit_BRTx) ||(COMx->UART_Mode == UART_8bit_BRTx))   //可变波特率
  53   2                      {
  54   3                              j = (MAIN_Fosc / 4) / COMx->UART_BaudRate;      //按1T计算
C51 COMPILER V9.00   USART1                                                                06/15/2016 16:36:38 PAGE 2   

  55   3                              if(j >= 65536UL)        return 2;       //错误
  56   3                              j = 65536UL - j;
  57   3                              if(COMx->UART_BRT_Use == BRT_Timer1)
  58   3                              {
  59   4                                      TR1 = 0;
  60   4                                      AUXR &= ~0x01;          //S1 BRT Use Timer1;
  61   4                                      TMOD &= ~(1<<6);        //Timer1 set As Timer
  62   4                                      TMOD &= ~0x30;          //Timer1_16bitAutoReload;
  63   4                                      AUXR |=  (1<<6);        //Timer1 set as 1T mode
  64   4                                      TH1 = (u8)(j>>8);
  65   4                                      TL1 = (u8)j;
  66   4                                      ET1 = 0;        //禁止中断
  67   4                                      TMOD &= ~0x40;  //定时
  68   4                                      INT_CLKO &= ~0x02;      //不输出时钟
  69   4                                      TR1  = 1;
  70   4                              }
  71   3                              else if(COMx->UART_BRT_Use == BRT_Timer2)
  72   3                              {
  73   4                                      AUXR &= ~(1<<4);        //Timer stop
  74   4                                      AUXR |= 0x01;           //S1 BRT Use Timer2;
  75   4                                      AUXR &= ~(1<<3);        //Timer2 set As Timer
  76   4                                      AUXR |=  (1<<2);        //Timer2 set as 1T mode
  77   4                                      TH2 = (u8)(j>>8);
  78   4                                      TL2 = (u8)j;
  79   4                                      IE2  &= ~(1<<2);        //禁止中断
  80   4                                      AUXR &= ~(1<<3);        //定时
  81   4                                      AUXR |=  (1<<4);        //Timer run enable
  82   4                              }
  83   3                              else return 2;  //错误
  84   3                      }
  85   2                      else if(COMx->UART_Mode == UART_ShiftRight)
  86   2                      {
  87   3                              if(COMx->BaudRateDouble == ENABLE)      AUXR |=  (1<<5);        //固定波特率SysClk/2
  88   3                              else                                                            AUXR &= ~(1<<5);        //固定波特率SysClk/12
  89   3                      }
  90   2                      else if(COMx->UART_Mode == UART_9bit)   //固定波特率SysClk*2^SMOD/64
  91   2                      {
  92   3                              if(COMx->BaudRateDouble == ENABLE)      PCON |=  (1<<7);        //固定波特率SysClk/32
  93   3                              else                                                            PCON &= ~(1<<7);        //固定波特率SysClk/64
  94   3                      }
  95   2                      if(COMx->UART_Interrupt == ENABLE)      ES = 1; //允许中断
  96   2                      else                                                            ES = 0; //禁止中断
  97   2                      if(COMx->UART_RxEnable == ENABLE)       REN = 1;        //允许接收
  98   2                      else                                                            REN = 0;        //禁止接收
  99   2                      P_SW1 = (P_SW1 & 0x3f) | (COMx->UART_P_SW & 0xc0);      //切换IO
 100   2                      if(COMx->UART_RXD_TXD_Short == ENABLE)  PCON2 |=  (1<<4);       //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
 101   2                      else                                                                    PCON2 &= ~(1<<4);
 102   2                      return  0;
 103   2              }
 104   1              return 3;       //其它错误
 105   1      }
 106          
 107          
 108          /*************** 装载串口发送缓冲 *******************************/
 109          
 110          void TX1_write2buff(u8 dat)     //写入发送缓冲，指针+1
 111          {
 112   1              TX1_Buffer[COM1.TX_write] = dat;        //装发送缓冲
 113   1              if(++COM1.TX_write >= COM_TX1_Lenth)    COM1.TX_write = 0;
 114   1      
 115   1              if(COM1.B_TX_busy == 0)         //空闲
 116   1              {  
C51 COMPILER V9.00   USART1                                                                06/15/2016 16:36:38 PAGE 3   

 117   2                      COM1.B_TX_busy = 1;             //标志忙
 118   2                      TI = 1;                                 //触发发送中断
 119   2              }
 120   1      }
 121          
 122          //void PrintString1(u8 *puts)
 123          //{
 124          //    for (; *puts != 0;        puts++)  TX1_write2buff(*puts);         //遇到停止符0结束
 125          //}
 126          void PrintString1(U8 *puts,U8 _cnt)             //发送一串字符串
 127          {
 128   1                      
 129   1              U8 i=0;
 130   1              do{UART1_TxByte(*(puts+i));i=i+1;}while((i)!= _cnt);
 131   1      }
 132          
 133          
 134          /********************* UART1中断函数************************/
 135          void UART1_int (void) interrupt UART1_VECTOR
 136          {
 137   1              if(RI)
 138   1              {
 139   2                      static U8 _data_len = 0,_data_cnt = 0;  
 140   2                      U8 com_data =SBUF;
 141   2                      RI=0;
 142   2                      if(RxState==0&&com_data==0xAA)
 143   2                      {
 144   3                              RxState=1;
 145   3                              RxBuffer[0]=com_data;
 146   3                              
 147   3                      }
 148   2                      else if(RxState==1&&com_data==0xAF)
 149   2                      {
 150   3                              RxState=2;
 151   3                              RxBuffer[1]=com_data;
 152   3      
 153   3                      }
 154   2                      else if(RxState==2&&com_data>0&&com_data<0XF1)
 155   2                      {
 156   3                              RxState=3;
 157   3                              RxBuffer[2]=com_data;
 158   3                      }
 159   2                      else if(RxState==3&&com_data<50)
 160   2                      {
 161   3                              RxState=4;
 162   3                              RxBuffer[3]=com_data;
 163   3                              _data_len = com_data;
 164   3                              _data_cnt = 0;
 165   3      
 166   3                      }
 167   2                      else    if(RxState==4&&_data_len>0)
 168   2                      {
 169   3      
 170   3                              _data_len--;
 171   3                              RxBuffer[4+_data_cnt++]=com_data;
 172   3                              if(_data_len==0)
 173   3                              RxState = 5;            
 174   3      
 175   3                      
 176   3                      }
 177   2                      else if(RxState==5)
 178   2                      {
C51 COMPILER V9.00   USART1                                                                06/15/2016 16:36:38 PAGE 4   

 179   3                              RxState = 0;
 180   3                              RxBuffer[4+_data_cnt]=com_data;
 181   3                              Data_Receive_Anl(RxBuffer,_data_cnt+5);
 182   3                              
 183   3                      }
 184   2                      else
 185   2                      {RxState = 0;   }
 186   2      
 187   2              }
 188   1              if(TI)
 189   1              {
 190   2                      TI = 0;
 191   2                      B_TI = 1;
 192   2              }
 193   1      }
 194          /*                                                                                                                                                              */
 195          void    UART_config(void)
 196          {
 197   1              COMx_InitDefine         COMx_InitStructure;                                     //结构定义
 198   1              COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;             //模式,       UART_ShiftRight,UART_8bit_BRTx,UART_9b
             -it,UART_9bit_BRTx
 199   1              COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;                 //使用波特率,   BRT_Timer1, BRT_Timer2 (注意: 串口2固定
             -使用BRT_Timer2)
 200   1              COMx_InitStructure.UART_BaudRate  = 115200ul;                   //波特率, 一般 110 ~ 115200
 201   1              COMx_InitStructure.UART_RxEnable  = ENABLE;                             //接收允许,   ENABLE或DISABLE
 202   1              COMx_InitStructure.BaudRateDouble = DISABLE;                    //波特率加倍, ENABLE或DISABLE
 203   1              COMx_InitStructure.UART_Interrupt = ENABLE;                             //中断允许,   ENABLE或DISABLE
 204   1              COMx_InitStructure.UART_Polity    = PolityLow;                  //中断优先级, PolityLow,PolityHigh
 205   1              COMx_InitStructure.UART_P_SW      = UART1_SW_P30_P31;   //切换端口,   UART1_SW_P30_P31,UART1_SW_P36_P37,UAR
             -T1_SW_P16_P17(必须使用内部时钟)
 206   1              COMx_InitStructure.UART_RXD_TXD_Short = DISABLE;                //内部短路RXD与TXD, 做中继, ENABLE,DISABLE
 207   1              USART_Configuration(USART1, &COMx_InitStructure);               //初始化串口1 USART1,USART2
 208   1      
 209   1      }
 210          
 211          
 212          
 213          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    918    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     60      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     80    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
